# NBEmail Web API 文档

## 基础信息

- **基础URL**: `http://localhost:8080`
- **内容类型**: `application/json; charset=utf-8`
- **认证方式**: Session Cookie (登录后自动设置)

## 认证相关

### 1. 用户登录【缺一个用户注册你帮我补】
- **URL**: `POST /api/login`
- **描述**: 用户登录获取会话
- **请求体**:
```json
{
    "email": "2014131458@qq.com",
    "password": "tgx123456"
}
```
- **响应**:
```json
{
    "success": true,
    "message": "登录成功",
    "data": {
        "user": {
            "id": 1,
            "email": "2014131458@qq.com",
            "name": "管理员",
            "is_admin": true
        }
    }
}
```

### 2. 用户登出
- **URL**: `POST /api/logout`
- **描述**: 用户登出清除会话

## 邮件相关 API

### 1. 获取邮件列表
- **URL**: `GET /api/emails`
- **描述**: 获取邮件列表（需要登录）
- **查询参数**:
  - `page`: 页码 (默认: 1)
  - `limit`: 每页数量 (默认: 20, 最大: 100)
  - `folder`: 文件夹 (默认: "inbox")
  - `search`: 搜索关键词 (可选)

- **响应**:
```json
{
    "success": true,
    "data": {
        "emails": [
            {
                "id": 1,
                "from_addr": "sender@example.com",
                "to_addr": "recipient@example.com",
                "subject": "邮件主题",
                "body": "邮件内容...",
                "created_at": "2025-07-20T13:50:29.738219004+08:00",
                "is_read": false
            }
        ],
        "total": 30,
        "page": 1,
        "limit": 20,
        "total_pages": 2
    }
}
```

### 2. 获取单个邮件详情
- **URL**: `GET /api/emails/{id}`
- **描述**: 获取指定邮件的详细信息
- **路径参数**:
  - `id`: 邮件ID

- **响应**:
```json
{
    "success": true,
    "data": {
        "id": 1,
        "from_addr": "sender@example.com",
        "to_addr": "recipient@example.com",
        "subject": "邮件主题",
        "body": "完整的邮件内容...",
        "created_at": "2025-07-20T13:50:29.738219004+08:00",
        "is_read": false
    }
}
```

### 3. 标记邮件为已读
- **URL**: `PUT /api/emails/{id}/read`
- **描述**: 标记指定邮件为已读状态
- **路径参数**:
  - `id`: 邮件ID

### 4. 删除邮件
- **URL**: `DELETE /api/emails/{id}`
- **描述**: 删除指定邮件
- **路径参数**:
  - `id`: 邮件ID

### 5. 发送邮件
- **URL**: `POST /api/emails/send`
- **描述**: 发送新邮件
- **请求体**:
```json
{
    "to": "recipient@example.com",
    "subject": "邮件主题",
    "body": "邮件内容",
    "from": "sender@example.com"
}
```

## 邮箱管理相关

### 1. 获取邮箱列表
- **URL**: `GET /api/mailboxes`
- **描述**: 获取用户的邮箱列表

### 2. 生成新邮箱
- **URL**: `POST /api/mailboxes/generate`
- **描述**: 为用户生成新的邮箱地址

### 3. 切换邮箱
- **URL**: `POST /api/mailboxes/switch`
- **描述**: 切换当前使用的邮箱

## 用户管理相关 (管理员权限)

### 1. 获取用户列表
- **URL**: `GET /api/users`
- **描述**: 获取所有用户列表 (仅管理员)

### 2. 创建用户
- **URL**: `POST /api/users`
- **描述**: 创建新用户 (仅管理员)

### 3. 更新用户
- **URL**: `PUT /api/users/{id}`
- **描述**: 更新用户信息 (仅管理员)

### 4. 删除用户
- **URL**: `DELETE /api/users/{id}`
- **描述**: 删除用户 (仅管理员)

## 域名管理相关

### 1. 获取域名列表
- **URL**: `GET /api/domains`
- **描述**: 获取域名列表

### 2. 创建域名
- **URL**: `POST /api/domains`
- **描述**: 添加新域名

### 3. 验证域名
- **URL**: `POST /api/domains/{id}/verify`
- **描述**: 验证域名DNS设置

## 错误响应格式

所有API在出错时都会返回以下格式：

```json
{
    "success": false,
    "message": "错误描述信息"
}
```

常见HTTP状态码：
- `200`: 成功
- `400`: 请求参数错误
- `401`: 未认证
- `403`: 权限不足
- `404`: 资源不存在
- `500`: 服务器内部错误

## 使用示例

### Python 示例
```python
import requests

# 登录
session = requests.Session()
login_data = {"email": "2014131458@qq.com", "password": "tgx123456"}
response = session.post("http://localhost:8080/api/login", json=login_data)

if response.json()["success"]:
    # 获取邮件列表
    emails = session.get("http://localhost:8080/api/emails?page=1&limit=10")
    print(emails.json())
```

### curl 示例
```bash
# 登录
curl -X POST http://localhost:8080/api/login \
  -H "Content-Type: application/json" \
  -d '{"email":"2014131458@qq.com","password":"tgx123456"}' \
  -c cookies.txt

# 获取邮件列表
curl -X GET "http://localhost:8080/api/emails?page=1&limit=10" \
  -b cookies.txt
```